# pyang(1) completion           -*- shell-script -*-

_pyang()
{
    local cur prev words plugin pl_opts wind=1

    local formats="hypertree dsdl depend sample-xml-skeleton omni yin
        tree jstree capability yang xsd uml jtox jsonxsl xmi"

    local opts_global="
        -h --help
        -v --version
        -V --verbose
        -e --list-errors
        --print-error-code
        -W -E
        --ignore-errors
        --canonical
        --max-line-length=
        --max-identifier-length=
        -f --format=
        -o --output=
        -F --features=
        --deviation-module=
        -p --path=
        --plugindir=
        --strict
        --lax-xpath-checks
        --trim-yin
        -L --hello
        --keep-comments
        --check-update-from=
        -P --check-update-from-path
        --ietf"

    local opts_capability="--capability-entity"

    local opts_depend="
        --depend-target=
        --depend-no-submodules
        --depend-from-submodules
        --depend-extension=
        --depend-include-path
        --depend-ignore-module="

    local opts_dsdl="
        --dsdl-no-documentation
        --dsdl-no-dublin-core
        --dsdl-record-defs"

    local opts_hypertree="
        --hypertree-help
        --hypertree-path="

    local opts_jstree="--jstree-no-path"

    local opts_omni="--omni-path="

    local opts_sample_xml_skeleton="
        --sample-xml-skeleton-doctype=
        --sample-xml-skeleton-defaults
        --sample-xml-skeleton-annotations"

    local opts_tree="
        --tree-help
        --tree-depth=
        --tree-path="

    local opts_uml="
        --uml-classes-only
        --uml-split-pages=
        --uml-output-directory=
        --uml-title=
        --uml-header=
        --uml-footer=
        --uml-long-identifiers
        --uml-inline-groupings
        --uml-inline-augments
        --uml-description
        --uml-no=
        --uml-truncate=
        --uml-max-enums=
        --uml-filter
        --uml-filter-file="

    local opts_xmi="--xmi-path --xmi-no-assoc-name"

    local opts_yang="
        --yang-canonical
        --yang-remove-unused-imports"

    local opts_yin="
        --yin-canonical
        --yin-pretty-strings"

    COMPREPLY=()
    _get_comp_words_by_ref cur prev cword words

    case $prev in
        -o)
            _filedir
            return 0
            ;;
        -W)
            COMPREPLY=($(compgen -W 'error none' -- "$cur"))
            return 0
            ;;
        -E)
            COMPREPLY=($(compgen -W '$(pyang --list-errors 2>&1 | \
                sed -ne "s/^Error:[[:space:]]*\([A-Za-z0-9_]*\).*/\1/p")' \
                -- "$cur"))
            return 0
            ;;
        -f)
            COMPREPLY=($(compgen -W '$formats' -- "$cur"))
            return 0
            ;;
    esac

    if [[ $cur == -* ]]; then
        while [[ $wind -lt $cword ]]; do
            if [[ ${words[$wind]} == "-f" || ${words[$wind]} == "--format" ]]
            then
                plugin=${words[$wind+1]}
                pl_opts="opts_${plugin//-/_}"
                break
            fi
        done
        COMPREPLY=($(compgen -W '$opts_global ${!pl_opts}' -- "$cur"))
        return 0
    fi
    
    _filedir '@(yang|yin)'
}

have pyang && complete -F _pyang pyang

